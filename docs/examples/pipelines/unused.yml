# code_snippet assign-multi-stemcell-usage start yaml
- task: assign-multi-stemcell
  image: platform-automation-image
  file: platform-automation-tasks/tasks/assign-multi-stemcell.yml
  params:
    ENV_FILE: ((foundation))/env/env.yml
# code_snippet assign-multi-stemcell-usage end
# code_snippet assign-stemcell-usage start yaml
- task: assign-stemcell
  image: platform-automation-image
  file: platform-automation-tasks/tasks/assign-stemcell.yml
  params:
    ENV_FILE: ((foundation))/env/env.yml
# code_snippet assign-stemcell-usage end
# code_snippet configure-ldap-authentication-usage start yaml
- task: configure-ldap-authentication
  image: platform-automation-image
  file: platform-automation-tasks/tasks/configure-ldap-authentication.yml
  params:
    ENV_FILE: ((foundation))/env/env.yml
    AUTH_CONFIG_FILE: ((foundation))/auth/auth.yml
# code_snippet configure-ldap-authentication-usage end
# code_snippet configure-saml-authentication-usage start yaml
- task: configure-saml-authentication
  image: platform-automation-image
  file: platform-automation-tasks/tasks/configure-saml-authentication.yml
  params:
    ENV_FILE: ((foundation))/env/env.yml
    AUTH_CONFIG_FILE: ((foundation))/auth/auth.yml
# code_snippet configure-saml-authentication-usage end
# code_snippet import-installation-usage start yaml
- task: import-installation
  image: platform-automation-image
  file: platform-automation-tasks/tasks/import-installation.yml
  input_mapping:
    env: configuration
  params:
    ENV_FILE: ((foundation))/env/env.yml
    INSTALLATION_FILE: installation-*.zip
# code_snippet import-installation-usage end
# code_snippet make-git-commit-usage start yaml
- task: make-commit
  image: platform-automation-image
  file: platform-automation-tasks/tasks/make-git-commit.yml
  input_mapping:
    repository: configuration
    file-source: generated-state
  output_mapping:
    repository-commit: configuration-commit
  params:
    FILE_SOURCE_PATH: state.yml
    FILE_DESTINATION_PATH: state/state.yml
    GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
    GIT_AUTHOR_NAME: "Platform Automation Bot"
    COMMIT_MESSAGE: 'Update state file'
# code_snippet make-git-commit-usage end
# code_snippet credhub-interpolate-usage start yaml
- task: interpolate-env-creds
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: ((credhub-server))
    PREFIX: '/pipeline/vsphere'
    INTERPOLATION_PATHS: ((foundation))/config
    SKIP_MISSING: true
  input_mapping:
    files: configuration
  output_mapping:
    interpolated-files: interpolated-configs
# code_snippet credhub-interpolate-usage end
# code_snippet stage-configure-apply-usage start yaml
- task: stage-configure-apply-healthwatch
  image: platform-automation-image
  file: platform-automation-tasks/tasks/stage-configure-apply.yml
  params:
    CONFIG_FILE: healthwatch.yml
  input_mapping:
    product: healthwatch-product
    env: configuration
    config: configuration
# code_snippet stage-configure-apply-usage end
# code_snippet download-product-usage-gcs start yaml
- task: download-pas
  image: platform-automation-image
  file: platform-automation-tasks/tasks/download-product.yml
  params:
    CONFIG_FILE: download-product/pas.yml
    SOURCE: gcs
  input_mapping:
    config: configuration
  output_mapping:
    downloaded-product: pas-product
    downloaded-stemcell: pas-stemcell
# code_snippet download-product-usage-gcs end
# code_snippet download-product-usage-azure start yaml
- task: download-pas
  image: platform-automation-image
  file: platform-automation-tasks/tasks/download-product.yml
  params:
    CONFIG_FILE: download-product/pas.yml
    SOURCE: azure
  input_mapping:
    config: configuration
  output_mapping:
    downloaded-product: pas-product
    downloaded-stemcell: pas-stemcell
# code_snippet download-product-usage-azure end
# code_snippet staged-config-usage start yaml
- task: staged-config
  image: platform-automation-image
  file: platform-automation-tasks/tasks/staged-config.yml
  input_mapping:
    env: configuration
  params:
    PRODUCT_NAME: cf
  ensure:
    do:
      - put: state
        params:
          file: generated-state/state.yml
# code_snippet staged-config-usage end
# code_snippet staged-director-config-usage start yaml
- task: staged-director-config
  image: platform-automation-image
  file: platform-automation-tasks/tasks/staged-director-config.yml
  input_mapping:
    env: configuration
  ensure:
    do:
      - put: state
        params:
          file: generated-state/state.yml
# code_snippet staged-director-config-usage end
# code_snippet configure-director-usage start yaml
- task: configure-director
  image: platform-automation-image
  file: platform-automation-tasks/tasks/configure-director.yml
  input_mapping:
    config: configuration
    env: configuration
# code_snippet configure-director-usage end
# code_snippet input-matched-resources-usage start yaml
- name: config
  type: git
  source:
    private_key: ((repo-key.private_key))
    uri: ((repo-uri))
    branch: develop

- name: env
  type: git
  source:
    private_key: ((repo-key.private_key))
    uri: ((repo-uri))
    branch: develop
# code_snippet input-matched-resources-usage end
# code_snippet configure-director-matched-resources-usage start yaml
- name: configure-director
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: config
        passed: [previous-job]
      - get: env
        passed: [previous-job]
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
# code_snippet configure-director-matched-resources-usage end
# code_snippet replicate-product-usage start yaml
- task: replicate-tile
  image: platform-automation-image
  file: platform-automation/tasks/replicate-tile.yml
  input_mapping:
    product: pas-windows
  params:
    REPLICATED_NAME: iso-1
# code_snippet replicate-product-usage end
# code_snippet update-runtime-config-usage start yaml
- task: update-runtime-config
  image: platform-automation-image
  file: platform-automation/tasks/update-runtime-config.yml
  input_mapping:
    config: configuration
    env: configuration
    releases: bosh-releases
  params:
    CONFIG_FILE: runtime-config.yml
    NAME: my-runtime-config
    OPSMAN_SSH_PRIVATE_KEY: ((opsman-ssh-private-key))
# code_snippet update-runtime-config-usage end
# code_snippet backup-product-usage start yaml
- task: backup-product
  image: platform-automation-image
  file: platform-automation-tasks/tasks/backup-product.yml
  params:
    PRODUCT_NAME: cf
    OPSMAN_SSH_PRIVATE_KEY: ((opsman-ssh-private-key))
# code_snippet backup-product-usage end
# code_snippet backup-director-usage start yaml
- task: backup-director
  image: platform-automation-image
  file: platform-automation-tasks/tasks/backup-director.yml
  params:
    OPSMAN_SSH_PRIVATE_KEY: ((vsphere_private_ssh_key))
# code_snippet backup-director-usage end
