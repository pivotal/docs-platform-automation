---
title: Ops Blocks for PCF
owner: PCF Norm
---

Ops Blocks for Pivotal Cloud Foundry (PCF)
is a set of commands that wrap and extend [om](https://github.com/pivotal-cf/om),
a command-line interface to Ops Manager.

Ops Blocks uses `om`,
(and by extension, the Ops Manager API)
to enable command-line interaction with Ops Manager,
a dashboard for installing, configuring, and updating software products on PCF.
Ops Blocks comes bundled with Concourse tasks
that demonstrate how to use these commands
in a containerized Continuous Integration (CI) system,
and a reference pipeline
showing one possible configuration of these tasks.

To learn more about Ops Manager,
see [Understanding the Ops Manager Interface](http://docs.pivotal.io/pivotalcf/customizing/pcf-interface.html).

## <a id='overview'></a>Overview
Ops Blocks commands enable PCF operators
to script and automate Ops Manager actions.
Ops Blocks commands are:

* **Legible**: They use configuration from 
human-readable YAML files,
which users can edit,
and manage in version control.

* **Modular**: Each command has defined inputs and outputs
and performs a granular action.
They're designed to work together
to enable many different workflows.
Users can build systems to make changes to all their products together,
or one at a time.
Users can extract configuration from one environment
and use it as a template for configuring many more.

* **Built for Automation** Commands are idempotent,
so re-running them in a CI won't break builds.
They read and write config from files,
which machines can easily pass around.
They're available in a Docker container,
which makes the tools easy to use in CI.

* **Not Comprehensive**: Workflows that use Ops Blocks
typically also contain `om` commands, custom tasks,
and even interactions with the Ops Manager user interface.
Ops Blocks are tools to use alongside other tools,
rather than a comprehensive solution.

## <a id='commands'></a> Ops Blocks Commands

The following table lists all Ops Blocks commands. See the [Command and Task Reference][command-reference] for a complete explanation of each:

| Command | Description |
| ------------- | ------------- |
| install-opsman | Install Opsman VM on supported IAAS (Currently only vSphere)
| configure-authentication |  configures Ops Manager with an internal userstore and admin user account
| configure-saml-authentication |  configures Ops Manager with SAML authentication
| configure-director |  configures the director
| upload-product |  uploads a given product to the Ops Manager targeted
| stage-product |  stages a given product to the Ops Manager targeted
| configure-product |  configures a staged product
| upload-stemcell |  uploads a given stemcell to the Ops Manager targeted
| apply-changes |  triggers an install on the Ops Manager targeted
| version |  prints the release version

## <a id='pipelines'></a> Using Ops Blocks in Pipelines
Ops Blocks comes bundled with Concourse [tasks][concourse-task-definition].
These task files wrap one or two Ops Blocks commands
and their input and output definitions
in the YAML format that Concourse uses to build pipelines.
If you use a different CI/CD platform, you can use these Concourse files as examples of the inputs, outputs, and arguments used in each step in the workflow.

The [Command Reference][command-reference] topic discusses these example tasks further.

## <a id='contents'></a>Documentation

* **Ops Blocks for PCF** - High-level introduction to Ops Blocks (this topic).

* **[Setting Up Ops Blocks](./setup.html)** - How to get what you need to use Ops Blocks

* **[Using Ops Blocks](./using.html)** - How to use Ops Blocks by themselves and within Concourse or other CI systems. Includes an example pipeline.

* **[Command Reference][command-reference]**

* **[Release Notes](./release-notes.html)**

[concourse-task-definition]: https://concourse-ci.org/tasks.html
[command-reference]: ./reference.html
