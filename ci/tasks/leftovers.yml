platform: linux
image_resource:
  type: registry-image
  source:
    repository: ((docker.ci-repository))
    tag: testing
params:
  # A list of IAAS specific authentication and targeting params.
  BBL_IAAS:

  # AWS
  BBL_AWS_ACCESS_KEY_ID:
  BBL_AWS_SECRET_ACCESS_KEY:
  BBL_AWS_ASSUME_ROLE:
  BBL_AWS_REGION:

  # Azure
  BBL_AZURE_CLIENT_ID:
  BBL_AZURE_CLIENT_SECRET:
  BBL_AZURE_TENANT_ID:
  BBL_AZURE_SUBSCRIPTION_ID:

  # GCP
  # Note: Please pass the JSON account key. This task automatically makes it a file for use in `leftovers`.
  BBL_GCP_SERVICE_ACCOUNT_KEY:

  # Vsphere
  BBL_VSPHERE_VCENTER_IP:
  BBL_VSPHERE_VCENTER_PASSWORD:
  BBL_VSPHERE_VCENTER_USER:
  BBL_VSPHERE_VCENTER_DC:
  BBL_NSXT_MANAGER_HOST:
  BBL_NSXT_USERNAME:
  BBL_NSXT_PASSWORD:

  # The filter is use to match by name what resources to delete.
  # It will match the string anywhere in the name, so be precise.
  # For example, `ci` will match the name `ci-hello` and `hello-ci`.
  FILTER:

  # The default behaviour of this task is to be non-destructive.
  # This way no assets will be *accidentally* deleted before the dry-run.
  # When enable with `true`, it will delete all the things matching the filter.
  NO_CONFIRM: false
  # When enable with `true`, it will just display the things that can be cleaned up.
  DRY_RUN: true
run:
  path: bash
  args:
  - -c
  - |

    set -eu

    if [ "$BBL_IAAS" == "" ]; then
      echo "BBL_IAAS is required"
      exit 1
    fi

    if [ "$FILTER" == "" ]; then
      echo "FILTER is required"
      exit 1
    fi

    args=()

    if [ "$NO_CONFIRM" == "true" ]; then
      args+=("--no-confirm")
    fi

    if [ "$DRY_RUN" == "true" ]; then
      args+=("--dry-run")
    fi

    if [ "$BBL_GCP_SERVICE_ACCOUNT_KEY" != "" ]; then
      file=$(mktemp)
      echo "$BBL_GCP_SERVICE_ACCOUNT_KEY" > "$file"
      export BBL_GCP_SERVICE_ACCOUNT_KEY="$file"
    fi

    args+=("--filter" "$FILTER")

    set -x

    # shellcheck disable=SC2068
    leftovers ${args[@]}
